% Richard Lange
% November 15, 2011
%
% Function to calibrate servo speeds for a given robot. Computed values are
% then stored in a file for future use because this function takes a while to
% execute

function[servo_stats] = calibrate_servo_speeds(robo_number)

    robo_disconnect;
    sock = robo_connect(robo_number);
    [~,~,servoNames] = get_servo_info();
    
    speeds = [20 40 60 80];
    
    stats = arrayfun(@(s) get_servo_time_stats(sock, s, 300, 0.06), ...
        speeds, 'UniformOutput', false);
    
    means = cellfun(@(data) mean(data));
    
    % PLOT of rads per sec vs servo @ each speed
    figure();
    colors = 'mbgrkc';
    h = zeros(size(speeds));
    % plot data for each speed on same graph:
    for i=1:length(speeds)
        colorchar = colors(mod(i, length(colors)+1));
        % convert char to [r g b]
        color = bitget(find('kbgcrmyw'==colorchar)-1, 1:3);
        % plot both data and mean value
        data = stats{i};
        hold on;
        h(i) = plot(data, 'Color', color);
        line([0 length(servoNames)], [means(i) means(i)], ...
            'Color', color, 'LineStyle', '--');
        hold off;
    end
    ylabel('Radians per Second');
    set(gca, 'XTickLabel', servoNames);
    legend(h, arrayfun(@(s) ['speed = ' num2str(s)], speeds, 'UniformOutput', false));
    
    % Calculate regression to data for each servo and for the mean
    servo_stats = struct(
    
    servo_stats = stats;

end